# 실행하려는 서비스(컨테이너)들을 정의
services:
  # 1. Config Server
  config-server:
    build: ./config/config-server  # ⭐️ 경로 수정
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - msa-network

  # 2. Discovery Service (Eureka)
  discovery-service:
    build: ./services/discovery-service # ⭐️ 경로 수정
    container_name: discovery-service
    ports:
      - "8761:8761"
    networks:
      - msa-network
    depends_on:
      - config-server
    environment:
      - SPRING_CONFIG_URI=http://config-server:8888

  # 3. Gateway Service
  gateway-service:
    build: ./services/gateway-service # ⭐️ 경로 수정
    container_name: gateway-service
    ports:
      - "8000:8000"
    networks:
      - msa-network
    depends_on:
      - discovery-service

    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
        # JWT
      - jwt.secret=${JWT_SECRET}
      - jwt.expiration=${JWT_EXPIRATION}

  # 4. User Service
  user-service:
    build: ./services/user-service # ⭐️ 경로 수정
    container_name: user-service
    networks:
      - msa-network
    depends_on:
      - discovery-service
      - config-server
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - eureka.client.serviceUrl.defaultZone=http://discovery-service:8761/eureka
      # DB 연결 설정
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      # SMTP
      - SPRING_MAIL_HOST=${SPRING_MAIL_HOST}
      - SPRING_MAIL_PORT=${SPRING_MAIL_PORT}
      - SPRING_MAIL_USERNAME=${SPRING_MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${SPRING_MAIL_PASSWORD}
      # JWT
      - jwt.secret=${JWT_SECRET}
      - jwt.expiration=${JWT_EXPIRATION}

  # 5. News Service
  news-service:
    build: ./services/news-service # ⭐️ 경로 수정
    container_name: news-service
    networks:
      - msa-network
    depends_on:
      - config-server
      - discovery-service
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-service:8761/eureka
      # DB 연결 설정
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      # JWT
      - jwt.secret=${JWT_SECRET}
      - jwt.expiration=${JWT_EXPIRATION}

# 6. Flask API (새로운 서비스 추가)
  flaskapi:
    build: ./services/flaskapi
    container_name: flaskapi
    ports:
      - "5000:5000"                     # 외부에서 직접 확인도 가능하도록 노출
    networks:
      - msa-network
    depends_on:
      discovery-service:
        condition: service_started      # 유레카가 먼저 떠야 등록 시도 가능
    environment:
      # Flask 실행 포트
      - PORT=5000
      # 유레카 정보
      - APP_NAME=FLASKAPI
      - INSTANCE_HOST=flaskapi          # ★ 컨테이너명과 동일하게 (게이트웨이/유레카에서 접근 가능)
      - EUREKA_SERVER=http://discovery-service:8761/eureka/
      # 타임존
      - TZ=Asia/Seoul
      # 프런트에서 직접 5000 호출할 경우를 대비한 CORS
      - CORS_ALLOWED_ORIGINS=http://localhost:3000
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:5000/"]
      interval: 15s
      timeout: 3s
      retries: 10

# 서비스들이 사용할 공용 네트워크 정의
networks:
  msa-network:
    driver: bridge